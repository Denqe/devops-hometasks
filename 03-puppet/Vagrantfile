Vagrant.configure("2") do |config|
    config.vm.box = "generic/centos8s"
    config.vm.synced_folder  ".", "/vagrant", disabled: false

    config.vm.provider "virtualbox" do |vb|
        vb.memory = 512
        vb.cpus   = 1
    end

    config.vm.define "slave1.puppet" do |slave|
        slave.vm.network "private_network", ip: "192.168.50.11"
        slave.vm.hostname = "slave1.puppet"

        slave.vm.provision :shell, inline: <<-SHELL
            yum install -y https://yum.puppet.com/puppet7-release-el-8.noarch.rpm
            yum install -y vim
            yum install -y --downloadonly puppet-agent
            sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
            service sshd restart
        SHELL
    end

    config.vm.define "slave2.puppet" do |slave|
        slave.vm.network "private_network", ip: "192.168.50.12"
        slave.vm.hostname = "slave2.puppet"

        slave.vm.provision :shell, inline: <<-SHELL
            yum install -y https://yum.puppet.com/puppet7-release-el-8.noarch.rpm
            yum install -y vim
            yum install -y --downloadonly puppet-agent
            sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
            service sshd restart
        SHELL
    end

    config.vm.define "master.puppet", primary: true do |master|
        master.vm.network "private_network", ip: "192.168.50.10"
        master.vm.hostname = "master.puppet"
        master.vm.provider("virtualbox") { |vb| vb.memory = 1024 }

        master.vm.provision :shell, inline: <<-SHELL
            yum install -y https://yum.puppet.com/puppet7-release-el-8.noarch.rpm
            yum install -y vim ansible sshpass
            yum install -y --downloadonly puppetserver
            sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
            service sshd restart
            echo "export PATH="/opt/puppetlabs/bin:/opt/puppetlabs/puppet/bin:$PATH"" >> /root/.bashrc
            cd /vagrant && ansible-playbook -i inventory playbook.yaml
        SHELL
    end
end
